// Simple tree traversal
//parent[] - stores parent of every node
//level[]- stores depth of every node

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int parent[110],level[110];
    bool isCousins(TreeNode* root, int x, int y) {
        yo(root);
        level[1]=1;
        if((level[x]==level[y]) && (parent[x]!=parent[y]) && parent[x]!=-1 && parent[y]!=-1)
            return true;
        return false;
    }
    void yo(TreeNode* root , int p=-1)
    {
        if(root == NULL)return;
        parent[root->val]=p;
        if(root->left!=NULL)
        {
            level[root->left->val]=level[root->val]+1;
            yo(root->left,root->val);
        }
        if(root->right!=NULL)
        {
            level[root->right->val] = level[root->val]+1;
            yo(root->right,root->val);
        }
    }
};
